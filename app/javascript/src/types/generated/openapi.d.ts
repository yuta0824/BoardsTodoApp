/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/boards/{board_id}/tasks/{task_id}/comments": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Board ID */
                board_id: number;
                /** @description Task ID */
                task_id: number;
            };
            cookie?: never;
        };
        /** コメント一覧を表示する */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Board ID */
                    board_id: number;
                    /** @description Task ID */
                    task_id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description コメント一覧を取得 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: number;
                            content: string;
                            commenterName: string;
                            commenterAvatar: string;
                            isOwner: boolean;
                        }[];
                    };
                };
            };
        };
        put?: never;
        /** コメントを作成する */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Board ID */
                    board_id: number;
                    /** @description Task ID */
                    task_id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        comment: {
                            content: string;
                        };
                    };
                };
            };
            responses: {
                /** @description コメントが作成される */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: number;
                            content: string;
                            commenterName: string;
                            commenterAvatar: string;
                            isOwner: boolean;
                        }[];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/comments/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Comment ID */
                id: number;
            };
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** コメントを削除する */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Comment ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description コメントが削除される */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: number;
                            content: string;
                            commenterName: string;
                            commenterAvatar: string;
                            isOwner: boolean;
                        }[];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
